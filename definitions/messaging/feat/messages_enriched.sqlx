config {
  type: "table",
  schema: "eros_messaging_feat",
  partitionBy: "sending_date", 
  clusterBy: ["username_std"],
  requirePartitionFilter: true,
  description: "Messages enriched with time features and performance metrics",
  labels: {app: "eros", domain: "messaging", layer: "feat"},
  tags: ["messaging_feat"],
  dependencies: ["mass_messages", "dim_creator_timezone"]
}

WITH 
enriched_base AS (
  SELECT 
    m.*,
    -- Time intelligence (PROBLEM 1: TIMING CHAOS)
    EXTRACT(HOUR FROM DATETIME(m.sending_ts, tz.timezone_iana)) as local_hour,
    FORMAT_DATE('%A', DATETIME(m.sending_ts, tz.timezone_iana)) as local_day_of_week,
    EXTRACT(DAYOFWEEK FROM DATETIME(m.sending_ts, tz.timezone_iana)) IN (1,7) as is_weekend,
    
    -- Performance metrics (PROBLEMS 2,5: PRICING & QUALITY)
    SAFE_DIVIDE(m.purchased_count, m.sent_count) as purchase_rate,
    SAFE_DIVIDE(m.earnings_total, m.sent_count) as rpm,
    SAFE_DIVIDE(m.viewed_count, m.sent_count) as view_rate
    
  FROM ${ref("mass_messages")} m
  LEFT JOIN ${ref("dim_creator_timezone")} tz 
    ON m.username_std = tz.username_std
)

SELECT * FROM enriched_base
WHERE sending_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY)